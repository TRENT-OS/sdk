/*
 *  ChanMux
 *
 *  Copyright (C) 2020, Hensoldt Cyber GmbH
 *
 */

import <if_ChanMux.camkes>;
// caller must import UART interface, since we don't have a generic one yet

// platform specific defaults
#include "ChanMux_plat_defaults.camkes"

//------------------------------------------------------------------------------
// Component definitions

#if !defined(CHANMUX_COMPONENT_NAME)
#error "define CHANMUX_COMPONENT_NAME"
#endif
#undef CHANMUX_COMPONENT_NAME_helper
#define CHANMUX_COMPONENT_NAME_helper       CHANMUX_COMPONENT_NAME

#if !defined(CHANMUX_UPPER_INTERFACES)
#error "define CHANMUX_UPPER_INTERFACES"
#endif
#undef CHANMUX_UPPER_INTERFACES_helper
#define CHANMUX_UPPER_INTERFACES_helper     CHANMUX_UPPER_INTERFACES

component CHANMUX_COMPONENT_NAME_helper {
    control;
    //-------------------------------------------------
    // generic upper interface
    provides       ChanMuxDriverInf    chanMux_rpc;

    //-------------------------------------------------
    // lower interface to underlying layer
    uses          BlockingWriteInf     UnderlyingChan_Rpc;
    dataport      Buf                  UnderlyingChan_inputDataport;
    dataport      Buf                  UnderlyingChan_outputFifoDataport;
    consumes      EventDataAvailable   UnderlyingChan_EventHasData;

    //-------------------------------------------------
    // upper interfaces
    #include CHANMUX_UPPER_INTERFACES_helper

}

#undef CHANMUX_COMPONENT_NAME_helper
#undef CHANMUX_UPPER_INTERFACES_helper


//------------------------------------------------------------------------------
// Interface definitions

// ensure we define this only once if this file in included multiple times
#if !defined(DECLARE_AND_CONNECT_INSTANCE_CHANMUX)

#define DECLARE_AND_CONNECT_INSTANCE_CHANMUX(_name_, _inst_, _UnderlyingChan_rpc_, _UnderlyingChan_inputDataport_, _UnderlyingChan_outputFifoDataport_, _UnderlyingChan_data_available_) \
    component   _name_          _inst_; \
    \
    connection  seL4RPCCall     _name_ ## _ ## _inst_ ## _UnderlyingChan_rpc( \
        from _inst_.UnderlyingChan_Rpc, \
        to   _UnderlyingChan_rpc_); \
    \
    connection  seL4SharedData  _name_ ## _ ## _inst_ ## _UnderlyingChan_inputDataport( \
        from _inst_.UnderlyingChan_inputDataport, \
        to   _UnderlyingChan_inputDataport_); \
    \
    connection  seL4SharedData  _name_ ## _ ## _inst_ ## _UnderlyingChan_outputFifoDataport( \
        from _UnderlyingChan_outputFifoDataport_, \
        to   _inst_.UnderlyingChan_outputFifoDataport); \
    \
    connection  seL4Notification _name_ ## _UnderlyingChan ## _inst_ ## _notification( \
        from _UnderlyingChan_data_available_, \
        to _inst_.UnderlyingChan_EventHasData);

#define DECLARE_AND_CONNECT_INSTANCE_CHANMUX_TO_UART(_name_, _inst_, _uart_inst_) \
DECLARE_AND_CONNECT_INSTANCE_CHANMUX( \
            _name_, _inst_, \
            _uart_inst_.UartDrv, \
            _uart_inst_.Uart_inputDataport,\
            _uart_inst_.Uart_outputFifoDataport, \
            _uart_inst_.Uart_DataAvailable)

#endif
