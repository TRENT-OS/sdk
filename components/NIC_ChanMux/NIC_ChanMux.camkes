/*
 *  NIC-Chanmux CAmkES Component
 *
 *  Copyright (C) 2020, Hensoldt Cyber GmbH
 *
 *
 *  to be used as:
 *
 *      #include "NIC_ChanMux/NIC_ChanMux.camkes"
 *
 *      DECLARE_COMPONENT_NIC_ChanMux(NIC_Chanmux_Driver_1)
 *      DECLARE_COMPONENT_NIC_ChanMux(NIC_Chanmux_Driver_2)
 *
 */

import <if_ChanMux.camkes>;
import <if_OS_Logger.camkes>;
import <if_OS_Nic.camkes>;

#include "ChanMux/ChanMuxHelper.camkes"

// If we pass the define from a system configuration header. CAmkES generation
// crashes when parsing this file. As a workaround we hardcode the value here
#define NIC_DRIVER_RINGBUFFER_SIZE 16*4096

#define DECLARE_COMPONENT_NIC_ChanMux(_name_) \
    component _name_ { \
        control; \
        \
        has              mutex               mutex_ctrl_channel; \
        \
        /* lower interface to ChanMux ------------------------------------- */ \
        ChanMux_CLIENT_DECLARE_INTERFACE(chanMux) \
        ChanMux_CLIENT_DECLARE_CHANNEL_CONNECTOR(chanMux, ctrl) \
        ChanMux_CLIENT_DECLARE_CHANNEL_CONNECTOR(chanMux, data) \
        \
        /* upper interface as NIC Driver ---------------------------------- */ \
        provides         if_OS_Nic           nic_rpc; \
        emits            EventDataAvailable  nic_event_hasData; \
        dataport         Buf(NIC_DRIVER_RINGBUFFER_SIZE) nic_port_to; /* driver -> network stack */  \
        dataport         Buf                             nic_port_from; /* network stack -> driver */ \
        \
        /* usage of LogServer is optional ----------------------------------*/ \
        maybe uses      if_OS_Logger        logServer_rpc; \
        maybe dataport  Buf                 logServer_port; \
        maybe consumes  EventReady          logServer_event_ready; \
    }
