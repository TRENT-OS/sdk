#-------------------------------------------------------------------------------
#
# SDK Jenkins Pipeline Configuration
#
# Copyright (C) 2022, HENSOLDT Cyber GmbH
#
#-------------------------------------------------------------------------------

# Format for test configurations:
#
# <system name>
#   flags: [SDK_DEMO]
#   testSystem: <repo>
#   testScript: <name, defaults to <system name>.py >
#   buildParams:
#   - -D TEST_CONFIGURATION=<target>
#   testParams:
#   - --tc=platform.test_configuration:<target>"
#   platforms: # can be a simple array or a map
#     <name1>:
#     <name2>:
#       addFlags: [SDK_DEMO]
#       buildParams: <array>
#       testParams: <array>


#-------------------------------------------------------------------------------
# Fundamental Demo Systems, required for the SDK package sanity check
#-------------------------------------------------------------------------------

demo_hello_world:
  flags: [SDK_DEMO]
  testScript: test_demo_hello_world.py
  platforms:
    sabre:
      addFlags: TEST
    rpi4:


#-------------------------------------------------------------------------------
# Additional Official Demo System
#-------------------------------------------------------------------------------

demo_vm_minimal:
  testScript: test_demo_vm_minimal.py
  platforms:
    qemu-arm-virt-a53:

# This needs a TimeServer, which QEMU currently does not provide
#demo_vm_serialserver:
#  testScript: test_demo_vm_serialserver.py
#  platforms:
#    qemu-arm-virt-a53:

demo_vm_virtio_net:
  testScript: test_demo_vm_virtio_net.py
  platforms:
    qemu-arm-virt-a53:

demo_iot_app:
  flags: [SDK_DEMO]
  testScript: test_demo_iot_app.py
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # ToDO: Clarify why test fails
      addFlags: [QEMU, NO_TEST]

demo_iot_app_imx6:
  flags: [SDK_DEMO]
  testScript: test_demo_iot_app.py
  platforms:
    sabre: # ToDO: fix test failures
      addFlags: [QEMU, NO_TEST]
    nitrogen6sx:

# This RasPi3 IoT Demo is broken because the component RPi_SPI_Flash conflicts
# with latest seL4 libplatsupport changes
#
#   demo_iot_app_rpi3:
#     flags: [SDK_DEMO]
#     platforms: [rpi3]

demo_tls_api:
  flags: [SDK_DEMO]
  testScript: test_demo_tls_api.py
  platforms:
    zynq7000:
      addFlags: [QEMU]
    sabre:
      addFlags: [QEMU]
    nitrogen6sx:
    rpi3:

# Currently there is no test.
demo_network_filter:
  flags: [SDK_DEMO, NO_TEST]
  platforms:
    zynq7000:
      addFlags: [QEMU]
    nitrogen6sx:

#-------------------------------------------------------------------------------
# Unofficial Demo Systems
#-------------------------------------------------------------------------------

# This needs to run on real hardware. Currently there is no test.
demo_i2c:
  platforms: [sabre]

# This needs to run on real hardware. Currently there is no test.
demo_tls_server:
  platforms: [zynq7000]

# This test was used during porting the RPi Ethernet driver only. The RasPi3
# Socket API of this test needs to be adapted to the recent changes. But this
# test system is to be deleted anyway, once it's confirmed that all relevant
# parts were integrated into test_network_api.
#
#   demo_raspi_ethernet:
#     platforms: [rpi3]

#------------------------------------------------------------------------------
# Test Systems
#
# Testing ZynqMP requires using the test container trentos_test:20210316
# which contains the Xilinx QEMU.
#------------------------------------------------------------------------------

test_timeserver:
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # ToDO: fix failing test
      addFlags: [QEMU, NO_TEST]
    rpi3:
    rpi4:

test_certserver:
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]
    rpi3:

test_uart:
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]
    zynqmp:
      addFlags: [QEMU]

test_chanmux:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_proxy_nvm:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_certparser:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_crypto_api:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp:
      addFlags: [QEMU]
    spike64:

test_cryptoserver:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_entropysource:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_storage_interface:
  testScript: test_storage_interface*.py
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]
    rpi3:
    rpi4:

test_filesystem:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_config_server:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_keystore:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_logserver:
  platforms:
    zynq7000:
      addFlags: [QEMU]
    zynqmp: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]

test_tls_api:
  platforms:
    sabre: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]
    zynq7000:
      addFlags: [QEMU]
    nitrogen6sx:
    rpi3:

test_tlsserver:
  platforms:
    sabre: # no test to reduce CI load?
      addFlags: [QEMU, NO_TEST]
    zynq7000:
      addFlags: [QEMU]
    nitrogen6sx:
    rpi3:

test_network_api_tcp_client_single_socket:
  testScript: test_network_api.py
  testSystem: ss/test_network_api
  buildParams: -D TEST_CONFIGURATION=tcp_client_single_socket
  testParams: --tc=platform.test_configuration:tcp_client_single_socket
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]

test_network_api_tcp_client_multiple_sockets:
  testScript: test_network_api.py
  testSystem: ss/test_network_api
  buildParams: -D TEST_CONFIGURATION=tcp_client_multiple_sockets
  testParams: --tc=platform.test_configuration:tcp_client_multiple_sockets
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]

test_network_api_tcp_client_multiple_clients:
  testScript: test_network_api.py
  testSystem: ss/test_network_api
  buildParams: -D TEST_CONFIGURATION=tcp_client_multiple_clients
  testParams: --tc=platform.test_configuration:tcp_client_multiple_clients
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: [QEMU]

test_network_api_tcp_server:
  testScript: test_network_api.py
  testSystem: ss/test_network_api
  buildParams: -D TEST_CONFIGURATION=tcp_server
  testParams: --tc=platform.test_configuration:tcp_server
  platforms:
    sabre:
      addFlags: [QEMU]
    zynq7000:
      addFlags: TEST
    sabre:
      addFlags: TEST
    rpi4:
